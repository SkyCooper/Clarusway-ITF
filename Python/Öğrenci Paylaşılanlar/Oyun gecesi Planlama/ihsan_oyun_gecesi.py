# -*- coding: utf-8 -*-
"""oyun_gecesi.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zsQwQaRg5r_4DNF-9AaYNVQEOEZYmjqr
"""

days_count = {}
day_list = []
user = []
user_last = set()
def user_entry():
  global day_list
  global user
  coun = int(input("how many will do you do member registration : "))
  while coun > 0:
   name = input("enter your first name and last name : ").capitalize()
   days = input("which days do you want game : ").lower().split()
   user.append({"name" : name , "availability" : days})
   day_list.append(days)
   coun -= 1
user_entry()
def calculate_avaibility():
  global days_count
  #days_count = {}
  list1 = []
  cou = 0
  for i in range(len(day_list)):  # split ile boşluklarından ayırdığımız kel.imeler ayrı bir liste oluyor onlar day_list e atadığımda içi içe liste oluyor ve count yapamıyorum burada tüm elemanları tek listeye aldım.
    for x in range(len(day_list[i])):  #The words that we separate from their spaces with (split) become a separate list. When I assign them to the day_list, they become a nested list and I cannot count. I have put all the elements in a single list.
      list1.append(day_list[i][x])
  for j in set(list1):
    days_count.update({j:list1.count(j)})
    if list1.count(j) > cou:
      cou = list1.count(j)
      most = j
  return most
def gamer_lists():
  global user_last  
  for i in range(len(user)):
    if calculate_avaibility() in user[i]["availability"]:
      user_last.add(user[i]["name"])
  return user_last
def second_avaible_night():
  days_count.pop(calculate_avaibility())
  return (list(days_count.keys())[list(days_count.values()).index(max(days_count.values()))])
def second_gamer_list():
  gamer = set()
  days_count.pop(calculate_avaibility())
  second_night = (list(days_count.keys())[list(days_count.values()).index(max(days_count.values()))])
  for i in range(len(user)):
    if second_night in user[i]["availability"]:
      gamer.add(user[i]["name"])
  return gamer
print("most avaible day = ", calculate_avaibility().upper(), "gamer lists = ", gamer_lists(), len(gamer_lists()), "person")
print("second night = ", second_avaible_night().upper(), "gamer list = ", second_gamer_list(), len(second_gamer_list()), "person")